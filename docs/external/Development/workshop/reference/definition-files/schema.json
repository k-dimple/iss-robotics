{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://canonical.com/workshop.yaml",
  "title": "Workshop",
  "description": "Workshop definition.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the workshop.",
      "pattern": "^[a-z](-?[a-z0-9])*$",
      "errorMessage": "A workshop's name must start with a letter and can only include digits, lowercase letters, and hyphens joining them."
    },
    "base": {
      "type": "string",
      "description": "Base system for the workshop.",
      "enum": [
        "ubuntu@20.04",
        "ubuntu@22.04",
        "ubuntu@24.04"
      ],
      "errorMessage": "The base must be one of the supported values: ubuntu@20.04, ubuntu@22.04, ubuntu@24.04."
    },
    "sdks": {
      "type": "array",
      "description": "List of SDKs used in the workshop.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the SDK.",
            "pattern": "^(?!agent$)([a-z0-9]-?)*[a-z](-?[a-z0-9])*$",
            "errorMessage": "An SDK's name must contain a letter, can only include digits, lowercase letters, and hyphens joining them, and cannot be 'agent'."
          },
          "channel": {
            "type": "string",
            "description": "Channel used for the SDK.",
            "pattern": "^[a-zA-Z0-9.-]+/(stable|candidate|beta|edge)$",
            "errorMessage": "Channel must follow the pattern <track>/<risk> (e.g., 'latest/stable')."
          },
          "source": {
            "type": "string",
            "description": "Local path or source for the SDK. If set, 'channel' need not be specified."
          },
          "plugs": {
            "type": "object",
            "description": "Plugs for the SDK.",
            "patternProperties": {
              "^[a-z_][a-z0-9_-]*$": {
                "type": "object",
                "properties": {
                  "bind": {
                    "type": "string",
                    "description": "Reference to a plug in the form [<sdk>:]<plug>. If omitted, the SDK is 'system'.",
                    "pattern": "^(([a-z0-9]-?)*[a-z](-?[a-z0-9])*)?:[a-z](-?[a-z0-9])*$",
                    "errorMessage": "Bind reference must follow the pattern [<sdk>:]<plug> (SDK optional)."
                  },
                  "attributes": {
                    "type": "object",
                    "description": "Dynamic attributes for the plug, must be empty if 'bind' is set.",
                    "additionalProperties": true
                  }
                },
                "allOf": [
                  {
                    "if": {
                      "properties": {
                        "bind": {
                          "type": "string"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "attributes": {
                          "type": "object",
                          "maxProperties": 0
                        }
                      },
                      "errorMessage": "If 'bind' is set, 'attributes' must be empty."
                    }
                  }
                ]
              }
            }
          },
          "slots": {
            "type": "object",
            "description": "Slots available for the SDK.",
            "additionalProperties": true
          },
          "hooks": {
            "type": "object",
            "description": "Hooks available for the SDK.",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ],
        "anyOf": [
          {
            "required": [
              "channel"
            ]
          },
          {
            "required": [
              "source"
            ]
          }
        ],
        "errorMessage": {
          "required": {
            "name": "Each SDK must specify a name.",
            "channel": "Either 'channel' or 'source' must be provided for the SDK."
          }
        }
      }
    },
    "connections": {
      "type": "array",
      "description": "List of connections between plugs and slots.",
      "items": {
        "type": "object",
        "properties": {
          "plug": {
            "type": "string",
            "description": "Reference to a plug in the form [<sdk>:]<plug>. If omitted, the SDK is 'system'.",
            "pattern": "^(([a-z0-9]-?)*[a-z](-?[a-z0-9])*)?:[a-z](-?[a-z0-9])*$",
            "errorMessage": "Plug reference must follow the pattern [<sdk>:]<plug> (SDK optional)."
          },
          "slot": {
            "type": "string",
            "description": "Reference to a slot in the form [<sdk>:]<slot>. If omitted, the SDK is 'system'.",
            "pattern": "^(([a-z0-9]-?)*[a-z](-?[a-z0-9])*)?:[a-z](-?[a-z0-9])*$",
            "errorMessage": "Slot reference must follow the pattern [<sdk>:]<slot> (SDK optional)."
          }
        },
        "required": [
          "plug",
          "slot"
        ],
        "errorMessage": {
          "required": {
            "plug": "Each connection must specify a plug.",
            "slot": "Each connection must specify a slot."
          }
        }
      }
    },
    "scripts": {
      "type": "object",
      "description": "List of scripts to be run in the workshop.",
      "patternProperties": {
        "^[a-z](-?[a-z0-9])*$": {
          "type": "string",
          "description": "Shell script."
        }
      },
      "additionalProperties": false,
      "errorMessage": "Script names must be unique and only appear once."
    }
  },
  "required": [
    "name",
    "base"
  ],
  "additionalProperties": false,
  "errorMessage": {
    "required": {
      "name": "The 'name' field is required.",
      "base": "The 'base' field is required."
    }
  }
}
